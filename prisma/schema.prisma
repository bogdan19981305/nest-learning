generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model Movie {
  id String @id @default(uuid(4))

  title       String     @unique
  description String?
  releaseYear Int        @map("release_year")
  rating      Float      @default(0.0)
  isAviable   Boolean    @map("is_aviable") @default(false)
  genre       MovieGenre @default(ACTION)

  poster   MoviePoster? @relation("movie_poster", fields: [posterId], references: [id])
  posterId String?      @unique @map("poster_id")
  reviews  Review[]     @relation("movie_reviews")
  actors   Actor[]      @relation("movie_actors")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("movies")
}

model MoviePoster {
  id  String @id @default(uuid(4))
  url String

  movie Movie? @relation("movie_poster")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("movie_poster")
}

model Review {
  id     String  @id @default(uuid(4))
  text   String
  rating Decimal @default(0.0)

  movie   Movie  @relation("movie_reviews", fields: [movieId], references: [id], onDelete: Cascade)
  movieId String @map("movie_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("reviews")
}

model Actor {
  id   String @id @default(uuid(4))
  name String

  movies Movie[] @relation("movie_actors")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("actors")
}

enum MovieGenre {
  ACTION
  COMEDY
  DRAMA
  HORROR

  @@map("enum_genres")
}
